<ClipboardMonitorWindow x:Name="Main" x:Class="allkeeper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
        xmlns:local="clr-namespace:allkeeper"
        xmlns:vm="clr-namespace:allkeeper.ViewModel"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        mc:Ignorable="d"
        Title="MainWindow" WindowStyle="None" ResizeMode="NoResize" ShowInTaskbar="False" Topmost="True" 
                        AllowsTransparency="True" Top="{Binding top, Mode=TwoWay}" Left="{Binding left, Mode=TwoWay}"
                        Width="{Binding width, Mode=TwoWay}" Height="{Binding height, Mode=TwoWay}"
                        ClipboardUpdateCommand="{Binding ClipboardUpdateCommand}">
    <ClipboardMonitorWindow.Background>
        <SolidColorBrush Color="{Binding background.Color, Mode=OneWay}" Opacity="0.01"/>
    </ClipboardMonitorWindow.Background>
    <ClipboardMonitorWindow.DataContext>
        <vm:MainViewModel/>
    </ClipboardMonitorWindow.DataContext>
    <ClipboardMonitorWindow.Resources>
        <Style x:Key="ButtonFocusVisual">
            <Setter
            Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MetroButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="DarkGray"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="OpacityMask" Value="#AA888888"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="White" Opacity="0.2"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Margin" Value="2 1" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="White" Opacity="0.1"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ScrollBar">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Opacity" Value="0.25"/>
        </Style>
        <vm:MouseOverToScrollBarVisibility x:Key="MouseOverToScrollBarVisibility" />
        <vm:MouseOverToButtonVisibility x:Key="MouseOverToButtonVisibility" />
    </ClipboardMonitorWindow.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding NotesSaveData}" />
            <i:InvokeCommandAction Command="{Binding SaveWindowPosition}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ShowApp}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding HideApp}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid x:Name="MainGrid"  Height="{Binding gridHeight,Mode=TwoWay}"
          VerticalAlignment="Top">
        <Grid.Background>
            <SolidColorBrush Color="{Binding background.Color,Mode=OneWay}" Opacity="0.95"/>
        </Grid.Background>
        <Grid>
            <Grid.Background>
                <SolidColorBrush Color="Black" Opacity="0.4"/>
            </Grid.Background>
            <StackPanel Orientation="Horizontal">

                <Grid x:Name="ClipboardGrid" Width="{Binding clipboardGridWidth, Mode=TwoWay}" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid x:Name="ClipboardToolbar" Grid.Row="0">
                        <Grid.Background>
                            <SolidColorBrush Color="White" Opacity="0.07"/>
                        </Grid.Background>
                        <Button x:Name="ClipboardClearButton" Content="x" Style="{StaticResource MetroButton}" 
                                FontFamily="Webdings" FontSize="15" HorizontalAlignment="Left"
                                Margin="5,0,0,0" VerticalAlignment="Center" Command="{Binding ClipboardClear}" 
                                ToolTip="Clear clipboard history" Visibility="{Binding clipboardClearButtonVisibility, Mode=TwoWay}"/>
                        <TextBlock Text="Clipboard History" Visibility="{Binding clipboardTitleVisibility, Mode=TwoWay}" FontSize="11" Foreground="White" Opacity="0.7" Margin="0,0,5,0" 
                                    HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <Rectangle Fill="White" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="1" Opacity="0.3" Margin="0,3,0,3"/>

                    </Grid>
                    <Grid x:Name="ClipboardMainGrid" Grid.Row="1">
                        <Grid.Background>
                            <SolidColorBrush Color="Black" Opacity="0.15"/>
                        </Grid.Background>
                        <Button x:Name="ClipboardGridCollapseButton" Width="{Binding ElementName=ClipboardMainGrid, Path=ActualHeight}" VerticalAlignment="Stretch" 
                                Style="{StaticResource MetroButton}" HorizontalAlignment="Right" 
                                 FontSize="11" Height="25" HorizontalContentAlignment="Right" 
                                Content="{Binding clipboardCollapseButtonText, Mode=TwoWay}" 
                                Command="{Binding ClipboardGridCollapseExtend}"
                                >
                            <shell:Button.LayoutTransform>
                                <shell:TransformGroup>
                                    <shell:ScaleTransform/>
                                    <shell:SkewTransform/>
                                    <shell:RotateTransform Angle="-90"/>
                                    <shell:TranslateTransform/>
                                </shell:TransformGroup>
                            </shell:Button.LayoutTransform>
                        </Button>
                        <ListBox x:Name="ClipboardList" ItemsSource="{Binding clipboard}" 
                                     Margin="0,0,25,40" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     BorderThickness="0" ScrollViewer.VerticalScrollBarVisibility="{Binding IsMouseOver,
                                                                                    RelativeSource={RelativeSource Self},
                                                                                    Converter={StaticResource MouseOverToScrollBarVisibility}}" 
                                 ScrollViewer.CanContentScroll="false">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel VerticalAlignment="Top"  Orientation="Vertical">
                                        <VirtualizingStackPanel.LayoutTransform>
                                            <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        </VirtualizingStackPanel.LayoutTransform>
                                    </VirtualizingStackPanel>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="LayoutTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Margin" Value="0,0,0,0"/>
                                    <Setter Property="MaxHeight" Value="80"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                Padding="{TemplateBinding Control.Padding}"
                                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                Background="{TemplateBinding Panel.Background}"
                                                Name="Bd"
                                                SnapsToDevicePixels="True">
                                                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                            <Condition Property="Selector.IsSelected" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Panel.Background" TargetName="Bd" 
                                                        >
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="White" Opacity="0.2"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderThickness" TargetName="Bd">
                                                            <Setter.Value>
                                                                <Thickness>0</Thickness>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                            <Condition Property="Selector.IsSelected" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Panel.Background" TargetName="Bd">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="White" Opacity="0.2"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderThickness" TargetName="Bd">
                                                            <Setter.Value>
                                                                <Thickness>1</Thickness>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                        <Setter Property="Panel.Background" TargetName="Bd">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="White" Opacity="0.2"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderThickness" TargetName="Bd">
                                                            <Setter.Value>
                                                                <Thickness>1</Thickness>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                    </Trigger>
                                                    <Trigger Property="UIElement.IsEnabled" Value="False">
                                                        <Setter Property="TextElement.Foreground" TargetName="Bd">
                                                            <Setter.Value>
                                                                <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>

                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource MetroButton}" Margin="0" Padding="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                            HorizontalContentAlignment="Stretch" Command="{Binding DataContext.ClipboardCopyItem, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                            CommandParameter="{Binding }">
                                        <Grid>
                                            <Grid x:Name="ClipboardItemGrid">
                                                <TextBlock Text="{Binding Mode=OneWay}" Margin="3,5,35,5" Foreground="White" 
                                                   FontSize="13" MaxHeight="70" HorizontalAlignment="Left" TextWrapping="Wrap" 
                                                   VerticalAlignment="Center"/>
                                                <Button x:Name="ClipboardDeleteButton" Content="r" FontFamily="Webdings" FontSize="12"
                                                DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Center"
                                                Style="{StaticResource MetroButton}" Margin="0,0,0,0" Command="{Binding DataContext.ClipboardDeleteItem, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                                CommandParameter="{Binding }" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver, 
                                                                                        Converter={StaticResource MouseOverToButtonVisibility}}">
                                                </Button>
                                            </Grid>
                                        </Grid>
                                    </Button>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <Image x:Name="SearchIcon" Visibility="{Binding clipboardTitleVisibility, Mode=TwoWay}" Width="15" Height="15" VerticalAlignment="Bottom" HorizontalAlignment="Left" Source="Media/searchicon.png" Margin="10,10,5,15"/>
                        <TextBox x:Name="SearchBar" Visibility="{Binding clipboardTitleVisibility, Mode=TwoWay}" CaretBrush="White" VerticalAlignment="Bottom" Margin="30,10,10,10" Height="25" FontSize="15" 
                                 Foreground="{Binding clipboardSearchBarForeground, Mode=TwoWay}" Text="{Binding clipboardSearchBarText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 HorizontalContentAlignment="Left" Padding="3,3,0,0" BorderThickness="0">
                            <TextBox.Background>
                                <SolidColorBrush Color="White" Opacity="0.0"/>
                            </TextBox.Background>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding ClipboardSearchBarLeftButtonDown}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding ClipboardSearchBarLostFocus}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </Grid>
                <Grid x:Name="NotesGrid" Width="{Binding notesGridWidth, Mode=TwoWay}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid x:Name="NotesToolbar" Grid.Row="0">
                        <Grid.Background>
                            <SolidColorBrush Color="White" Opacity="0.07"/>
                        </Grid.Background>
                        <TextBlock Text="Quick Notes" Visibility="{Binding notesContentVisibility, Mode=TwoWay}" FontSize="11" Foreground="White" Opacity="0.7" Margin="0,0,5,0" 
                                    HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <Button Content="+" Command="{Binding NoteAddShowGrid}" Style="{StaticResource MetroButton}" FontFamily="Calibri" FontSize="15" HorizontalAlignment="Left"
                                Margin="5,0,0,0" VerticalAlignment="Center" ToolTip="Add Note" Visibility="{Binding notesContentVisibility, Mode=TwoWay}"/>
                    </Grid>
                    <Grid x:Name="NotesMainGrid" Grid.Row="1">
                        <Button x:Name="NotesGridCollapseButton" Width="{Binding ElementName=NotesMainGrid, Path=ActualHeight}" VerticalAlignment="Stretch" 
                                Style="{StaticResource MetroButton}" HorizontalAlignment="Right" 
                                 FontSize="11" Height="25" HorizontalContentAlignment="Right" 
                                Content="{Binding notesCollapseButtonText, Mode=TwoWay}" 
                                Command="{Binding NotesGridCollapseExtend}">
                            <shell:Button.LayoutTransform>
                                <shell:TransformGroup>
                                    <shell:ScaleTransform/>
                                    <shell:SkewTransform/>
                                    <shell:RotateTransform Angle="-90"/>
                                    <shell:TranslateTransform/>
                                </shell:TransformGroup>
                            </shell:Button.LayoutTransform>
                        </Button>
                        <ListBox x:Name="NotesListBox" ItemsSource="{Binding notes}" BorderThickness="0" Background="Transparent"
                                 Margin="0,0,25,5" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False"
                                 Visibility="{Binding noteListGridVisibility, Mode=TwoWay}"
                                 ScrollViewer.VerticalScrollBarVisibility="{Binding IsMouseOver,
                                                                            RelativeSource={RelativeSource Self},
                                                                            Converter={StaticResource MouseOverToScrollBarVisibility}}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel VerticalAlignment="Top"  Orientation="Vertical">
                                        <VirtualizingStackPanel.LayoutTransform>
                                            <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        </VirtualizingStackPanel.LayoutTransform>
                                    </VirtualizingStackPanel>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="LayoutTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="MinHeight" Value="60"/>
                                    <Setter Property="MaxHeight" Value="140"/>
                                    <Setter Property="Margin" Value="0,0,0,0"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="White" Opacity="0.1"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                Padding="{TemplateBinding Control.Padding}"
                                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                Background="{TemplateBinding Panel.Background}"
                                                Name="Bd"
                                                SnapsToDevicePixels="True">
                                                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                            <Condition Property="Selector.IsSelected" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Panel.Background" TargetName="Bd" 
                                                        Value="Transparent"/>
                                                        <Setter Property="Border.BorderThickness" TargetName="Bd">
                                                            <Setter.Value>
                                                                <Thickness>0</Thickness>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                            <Condition Property="Selector.IsSelected" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Panel.Background" TargetName="Bd">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="Transparent" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderThickness" TargetName="Bd">
                                                            <Setter.Value>
                                                                <Thickness>1</Thickness>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                        <Setter Property="Panel.Background" TargetName="Bd">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="White" Opacity="0.2"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderThickness" TargetName="Bd">
                                                            <Setter.Value>
                                                                <Thickness>1</Thickness>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Border.BorderBrush" TargetName="Bd" Value="Transparent"/>
                                                    </Trigger>
                                                    <Trigger Property="UIElement.IsEnabled" Value="False">
                                                        <Setter Property="TextElement.Foreground" TargetName="Bd">
                                                            <Setter.Value>
                                                                <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid x:Name="NotesItemGrid">
                                        <TextBlock x:Name="NoteTitle" Text="{Binding title, Mode=OneWay}" FontSize="11" Foreground="LightGray" VerticalAlignment="Top" 
                                               HorizontalAlignment="Left" Margin="10,5,0,0"/>
                                        <TextBlock x:Name="NoteContent" Foreground="White" FontSize="13" Text="{Binding content, Mode=OneWay}" 
                                           TextWrapping="Wrap" MaxHeight="115" Margin="5,20,85,10" VerticalAlignment="Center" 
                                           HorizontalAlignment="Left" FontFamily="Segoe UI" />
                                        <Button HorizontalAlignment="Right" Width="35" Height="25" Margin="0,0,0,0"
                                        Style="{StaticResource MetroButton}" ToolTip="Delete item" Content="r" FontFamily="Webdings" FontSize="12"
                                        Command="{Binding DataContext.NoteDelete, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                        CommandParameter="{Binding }" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver, 
                                                                                        Converter={StaticResource MouseOverToButtonVisibility}}"/>
                                        <Button HorizontalAlignment="Right" Width="35" Height="25" Margin="0,0,35,0"
                                        Style="{StaticResource MetroButton}" ToolTip="Show/Edit item"
                                        Command="{Binding DataContext.NoteEditShowGrid, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                        CommandParameter="{Binding }" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver, 
                                                                                   Converter={StaticResource MouseOverToButtonVisibility}}">
                                            <Button.Content>
                                                <Image Source="Media/expand_icon.png" Height="15" Width="15" Opacity="0.8"/>
                                            </Button.Content>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <Grid x:Name="AddNoteGrid" Visibility="{Binding noteAddGridVisibility,Mode=TwoWay}" Margin="0,0,25,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="40" />
                            </Grid.RowDefinitions>
                            <TextBox x:Name="TextBoxAddNoteTitle" VerticalContentAlignment="Center" MaxLength="50" FontSize="14" Height="30" Margin="0,0,0,0" VerticalAlignment="Top"
                                     HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Foreground="White" CaretBrush="White" BorderThickness="0" 
                                     Text="{Binding noteTitle, Mode=TwoWay}">
                                <TextBox.Background>
                                    <SolidColorBrush Color="White" Opacity="0.07"/>
                                </TextBox.Background>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding NoteTitleLeftButtonDown}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding NoteTitleLostFocus}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                            <TextBox x:Name="TextBoxAddNote" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" AcceptsReturn="True" AcceptsTab="True" 
                                     Background="Transparent" Foreground="{Binding noteContentForeground, Mode=TwoWay}" 
                                     Text="{Binding noteContent, Mode=TwoWay}" CaretBrush="White" FontSize="13" Margin="10,40,10,10" 
                                     BorderThickness="0" Grid.Row="0" VerticalAlignment="Top">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding NoteContentLeftButtonDown}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding NoteContentLostFocus}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                            <Grid Grid.Row="1" HorizontalAlignment="Stretch">
                                <Grid.Background>
                                    <SolidColorBrush Color="White" Opacity="0.0"/>
                                </Grid.Background>
                                <Button Content="Save" Command="{Binding NoteSaveNewNote}" Foreground="White" 
                                        Style="{StaticResource MetroButton}" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                                <Button Content="Cancel" Command="{Binding NoteCancel}" Foreground="White" 
                                        Style="{StaticResource MetroButton}" HorizontalAlignment="Right" Margin ="0,0,5,0"/>
                            </Grid>
                        </Grid>
                        <Grid x:Name="EditNoteGrid" Visibility="{Binding noteEditGridVisibility,Mode=TwoWay}" Margin="0,0,25,0">
                            <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="40" />
                        </Grid.RowDefinitions>
                            <TextBox VerticalContentAlignment="Center"  x:Name="TextBoxEditNoteTitle" MaxLength="50" FontSize="14" Height="30" Margin="0,0,0,0" VerticalAlignment="Top"
                         HorizontalAlignment="Stretch" Foreground="White" CaretBrush="White" BorderThickness="0" HorizontalContentAlignment="Center"
                         Text="{Binding noteEditTitle, Mode=TwoWay}">
                            <TextBox.Background>
                                <SolidColorBrush Color="White" Opacity="0.07"/>
                            </TextBox.Background>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding NoteTitleLeftButtonDown}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding NoteTitleLostFocus}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                            <TextBox x:Name="TextBoxEditNote" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" AcceptsReturn="True" 
                         AcceptsTab="True" Background="Transparent" Foreground="{Binding noteContentForeground, Mode=TwoWay}" 
                     Text="{Binding noteEditContent, Mode=TwoWay}" CaretBrush="White" FontSize="13" Margin="10,40,10,10" 
                         BorderThickness="0" Grid.Row="0" VerticalAlignment="Top">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding NoteContentLeftButtonDown}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding NoteContentLostFocus}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                            <Grid Grid.Row="1" HorizontalAlignment="Stretch">
                            <Grid.Background>
                                <SolidColorBrush Color="White" Opacity="0.0"/>
                            </Grid.Background>
                            <Button Content="Save" Command="{Binding NoteEditSave}" Foreground="White" 
                                Style="{StaticResource MetroButton}" HorizontalAlignment="Left" Margin="5,0,0,0">
                            </Button>
                            <Button Content="Cancel" Command="{Binding NoteCancel}" Foreground="White" 
                                Style="{StaticResource MetroButton}" HorizontalAlignment="Right" Margin="0,0,5,0"
                        />
                        </Grid>
                    </Grid>
                </Grid>
                </Grid>
            </StackPanel>
        </Grid>
        <tb:TaskbarIcon x:Name="TrayIcon" IconSource="Media/logo.ico" MenuActivation="All">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Position">
                        <MenuItem Header="Top" Command="{Binding WindowTop}"/>
                        <MenuItem Header="Bottom" Command="{Binding WindowBottom}"/>
                    </MenuItem>
                    <MenuItem x:Name="shutdownTray" Header="Exit" Click="shutdownTray_Click" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>


</ClipboardMonitorWindow>
